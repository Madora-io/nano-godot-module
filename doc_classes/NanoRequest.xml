<?xml version="1.0" encoding="UTF-8" ?>
<class name="NanoRequest" inherits="HTTPRequest" version="3.3">
	<brief_description>
	Extension of [HTTPRequest] with built in functions for common Nano requests.
	</brief_description>
	<description>
	This class functions similarly to HTTPRequest (including using the same signals), with convenience functions for interacting with the Nano network. You must use [method set_connection_parameters] to initialize the requester before any calls can be made. Additionally, if the requests involve an account (all inbuilt requests require this) the [method set_account] function is required.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="basic_auth_header">
			<return type="String" />
			<argument index="0" name="username" type="String" />
			<argument index="1" name="password" type="String" />
			<description>
			Create a Basic Auth header, to be passed in with [method set_connection_parameters].
			</description>
		</method>
		<method name="set_connection_parameters">
			<return type="void" />
			<argument index="0" name="node_url" type="String" />
			<argument index="1" name="auth_header" type="String" default="&quot;&quot;" />
			<argument index="2" name="use_ssl" type="bool" default="true" />
			<argument index="3" name="work_url" type="String" default="&quot;&quot;" />
			<description>
			Initialize the requester, work_url is an optional value for configurations that use a separate url for work generation.
			</description>
		</method>
		<method name="account_balance">
			<return type="int" enum="Error" />
			<description>
			</description>
		</method>
		<method name="account_info">
			<return type="int" enum="Error" />
			<argument index="0" name="include_confirmed" type="bool" default="true" />
			<description>
			</description>
		</method>
		<method name="block_create">
			<return type="Dictionary" />
			<argument index="0" name="previous" type="String" />
			<argument index="1" name="representative" type="NanoAccount" />
			<argument index="2" name="balance" type="NanoAmount" />
			<argument index="3" name="link" type="String" />
			<argument index="4" name="work" type="String" default="&quot;&quot;" />
			<description>
				Create the hash for a block on this account with the given parameters. This is identical to the RPC function [b]block_create[/b] (https://docs.nano.org/commands/rpc-protocol/#block_create) without needing to send a private key off of the local device.
				The return dictionary will have the following structure:
				[codeblock]
				{
				    "hash": "FF0144381CFF0B2C079A115E7ADA7E96F43FD219446E7524C48D1CC9900C4F17",
				    "block": {
				        "type": "state",
				        "account": "nano_3qgmh14nwztqw4wmcdzy4xpqeejey68chx6nciczwn9abji7ihhum9qtpmdr",
				        "previous": "F47B23107E5F34B2CE06F562B5C435DF72A533251CB414C51B2B62A8F63A00E4",
				        "representative": "nano_1hza3f7wiiqa7ig3jczyxj5yo86yegcmqk3criaz838j91sxcckpfhbhhra1",
				        "balance": "1000000000000000000000",
				        "link": "19D3D919475DEED4696B5D13018151D1AF88B2BD3BCFF048B45031C1F36D1858",
				        "signature": "3BFBA64A775550E6D49DF1EB8EEC2136DCD74F090E2ED658FBD9E80F17CB1C9F9F7BDE2B93D95558EC2F277FFF15FD11E6E2162A1714731B743D1E941FA4560A",
				        "work": "cab7404f0b5449d0"
				    }
				}
				[/codeblock]
				Note: Work will only be included if provided, this function will not automatically generate in a work value. Signature will be generated.
			</description>
		</method>
		<method name="nano_request">
			<return type="int" enum="Error" />
			<argument index="0" name="body" type="Dictionary" />
			<argument index="1" name="use_work_url" type="bool" default="false" />
			<description>
			Create a nano request that does not have a provided convenience function.
			</description>
		</method>
		<method name="pending">
			<return type="int" enum="Error" />
			<argument index="0" name="count" type="int" default="0" />
			<argument index="1" name="threshold" type="String" default="&quot;&quot;" />
			<description>
			</description>
		</method>
		<method name="process">
			<return type="int" enum="Error" />
			<argument index="0" name="subtype" type="String" />
			<argument index="1" name="block" type="Dictionary" />
			<description>
			</description>
		</method>
		<method name="work_generate">
			<return type="int" enum="Error" />
			<argument index="0" name="hash" type="String" />
			<argument index="1" name="use_peers" type="bool" default="false"/>
			<argument index="2" name="difficulty" type="String" default="&quot;fffffff800000000&quot;"/>
			<description>
			Make a work_generate request to the node. Will use the work_url if set. Difficulty defaults to send difficulty, use fffffe0000000000 for receive blocks. See https://docs.nano.org/integration-guides/work-generation/ for more information.
			</description>
		</method>
	</methods>
	<members>
		<member name="account" type="NanoAccount" setter="set_account" getter="get_account">
		The account that will be used with requests for this requester. Required for helper functions like [method block_create], [method account_info], and others that expect require some sort of account information.
		</member>
	</members>
	<constants>
	</constants>
</class>
