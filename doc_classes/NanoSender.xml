<?xml version="1.0" encoding="UTF-8" ?>
<class name="NanoSender" inherits="Node" version="3.3">
	<brief_description>
	Convenience class for sending Nano.
	</brief_description>
	<description>
	This class encapsulates the RPC calls account_info, block_create, work_generate, and process into one method and signal. [method set_connection_parameters] must be used to initialize the sender.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="is_ready">
			<return type="bool" />
			<description>
			Returns true if the sender is ready to make another request, or false if it is currently processing one.
			</description>
		</method>
		<method name="send">
			<return type="void" />
			<argument index="0" name="sender" type="NanoAccount" />
			<argument index="1" name="destination" type="NanoAccount" />
			<argument index="2" name="amount" type="NanoAmount" />
			<argument index="3" name="url" type="String" default="&quot;&quot;" />
			<description>
			Send an amount. Destination account should be created from a public address using [method NanoAccount.set_address], which will automatically set the public key needed for this call. The url parameter is optional, and can be used to override the node_url and work_url set in [method set_connection_parameters].
			</description>
		</method>
		<method name="set_connection_parameters">
			<return type="void" />
			<argument index="0" name="node_url" type="String" />
			<argument index="1" name="auth_header" type="String" default="false" />
			<argument index="2" name="use_ssl" type="bool" default="true" />
			<argument index="3" name="work_url" type="String" default="&quot;&quot;" />
			<argument index="4" name="use_peers" type="bool" default="false" />
			<description>
			This must be called before attempting to do any sending. default_representative is used for newly created accounts. auth_header can be generated with [method NanoRequest.basic_auth_header] for Basic Authentication (https://en.wikipedia.org/wiki/Basic_access_authentication), or any other token depending on the requirements of the node proxy. Work URL is required if work must be generated at a different destination than the RPC Node. If the same destination is used for both, use_peers will likely need to be true. For more information on Work Generation, see https://docs.nano.org/integration-guides/work-generation/.
			</description>
		</method>
	</methods>
	<signals>
		<signal name="nano_send_completed">
			<argument index="0" name="account" type="NanoAccount" />
			<argument index="1" name="message" type="String" />
			<argument index="2" name="response_code" type="int" />
			<description>
			This signal is sent whenever the send has finished, regardless of success or failure. On a success, the message field will be the block hash of the received block (necessary for tracking confirmation), and the response code will be 0. On a failure, the message will be an error message, and the response code will be a positive integer.
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
